[{"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/index.js":"1","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/reportWebVitals.js":"2","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/App.js":"3","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Header.js":"4","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Footer.js":"5","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Main.js":"6","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/PopupWithForm.js":"7","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Login.js":"8","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Register.js":"9","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/EditAvatarPopup.js":"10","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/ImagePopup.js":"11","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/ProtectedRoute.js":"12","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/EditProfilePopup.js":"13","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/AddPlacePopup.js":"14","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/utils/Auth.js":"15","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/utils/Api.js":"16","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/contexts/CurrentUserContext.js":"17","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/InfoTooltip.js":"18","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Card.js":"19"},{"size":611,"mtime":1616097049137,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610290820371,"results":"22","hashOfConfig":"21"},{"size":9356,"mtime":1616308661365,"results":"23","hashOfConfig":"21"},{"size":1191,"mtime":1616308709959,"results":"24","hashOfConfig":"21"},{"size":197,"mtime":1616308770389,"results":"25","hashOfConfig":"21"},{"size":1878,"mtime":1616308770418,"results":"26","hashOfConfig":"21"},{"size":938,"mtime":1611773974787,"results":"27","hashOfConfig":"21"},{"size":2171,"mtime":1616310199418,"results":"28","hashOfConfig":"21"},{"size":2445,"mtime":1616309596966,"results":"29","hashOfConfig":"21"},{"size":1119,"mtime":1616308770399,"results":"30","hashOfConfig":"21"},{"size":612,"mtime":1616308770405,"results":"31","hashOfConfig":"21"},{"size":347,"mtime":1616308705683,"results":"32","hashOfConfig":"21"},{"size":2031,"mtime":1616308770414,"results":"33","hashOfConfig":"21"},{"size":1540,"mtime":1616308726113,"results":"34","hashOfConfig":"21"},{"size":1405,"mtime":1616308726109,"results":"35","hashOfConfig":"21"},{"size":3031,"mtime":1615825721859,"results":"36","hashOfConfig":"21"},{"size":83,"mtime":1611402939029,"results":"37","hashOfConfig":"21"},{"size":1062,"mtime":1616309958088,"results":"38","hashOfConfig":"21"},{"size":2028,"mtime":1616308770410,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"15u29iz",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/index.js",[],["81","82"],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/reportWebVitals.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/App.js",["83"],"import '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\n\nimport {Redirect, Route, Switch, useHistory} from 'react-router-dom';\n\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip'\nimport * as Auth from '../utils/Auth';\n\nimport React from 'react';\nimport {api} from '../utils/Api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport AddPlacePopup from './AddPlacePopup';\nimport ProtectedRoute from './ProtectedRoute';\n\n\nfunction App() {\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [isInfoTooltipOpen, setInfoTooltipOpen] = React.useState(false);\n    const [isTooltipStatus, setTooltipStatus] = React.useState('success');\n\n    const [currentUser, setCurrentUser] = React.useState('');\n\n    const history = useHistory();\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [userData, setUserData] = React.useState({\n        email: '',\n        password: ''\n    });\n\n\n    React.useEffect(() => {\n        tokenCheck();\n    }, []);\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then(res => {\n                setCurrentUser(res)\n            }).catch((err) => alert(err));\n    }, [])\n\n    function handleInfoTooltipOpen(status) {\n        setInfoTooltipOpen(true);\n        setTooltipStatus(status);\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(data) {\n        setSelectedCard(data);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false);\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setInfoTooltipOpen(false)\n        setSelectedCard(null);\n    }\n\n    //Изменение инфо\n    function handleUpdateUser(data) {\n        api.addUserInfo(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n\n    // Изменение аватара\n    function handleUpdateAvatar(data) {\n        api.addUserAvatar(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n\n    //Отрисовка карточек с сервера\n    const [cards, setCards] = React.useState([]);\n    React.useEffect(() => {\n        api.getAllCards()\n            .then(data => {\n                setCards(data)\n            }).catch((err) => alert(err));\n    }, []);\n\n    // Лайк\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        isLiked ? (\n            //Отправляем запрос для удаления лайка\n            api.dislikeCard(card._id).then((res) => {\n                const dislikeCard = cards.map((item) => item._id === card._id ? res : item);\n                setCards(dislikeCard)\n            }).catch((err) => alert(err))\n        ) : (\n            // Отправляем запрос в API и получаем обновлённые данные карточки\n            api.likeCard(card._id, !isLiked).then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                // Обновляем стейт\n                setCards(newCards);\n            }).catch((err) => alert(err))\n        )\n    }\n\n    // Удаление карточки\n    function handleCardDelete(card) {\n        // Определяем, являемся ли мы владельцем текущей карточки\n        const isOwn = card.owner._id === currentUser._id;\n\n        if (isOwn) {\n            api.deleteCards(card._id).then(() => {\n                const filterCard = cards.filter((item) => item._id !== card._id)\n                setCards(filterCard);\n            }).catch((err) => alert(err));\n        }\n    }\n\n    //Создаем новую карточку\n    function handleAddPlaceSubmit(data) {\n        api.addNewCards(data).then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n\n\n    function tokenCheck() {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            Auth.getContent(jwt)\n                .then((res) => {\n                    const userData = {\n                        email: res.data.email,\n                        password: res.data.password\n                    }\n                    setUserData(userData);\n                    setLoggedIn(true);\n                    history.push('/');\n                }).catch(err => {\n                console.log(err)\n            })\n        }\n    }\n\n    function handleLogin(email, password) {\n        Auth.authorize(email, password)\n            .then((data) => {\n                if (data.token) {\n                    localStorage.setItem('jwt', data.token);\n                    setLoggedIn(true)\n                    history.push('/');\n                }\n            }).catch(err => console.log(err))\n    }\n\n    function handleRegister(email, password) {\n        Auth.register(email, password)\n            .then((res) => {\n                // console.log(res)\n                if (res !== undefined && res.data._id) {\n                    setUserData({\n                        email: res.data.email\n                    })\n                    handleInfoTooltipOpen();\n                    setTimeout(() => {\n                        handleLogin(email, password);\n                    }, 300);\n                } else {\n                    handleInfoTooltipOpen('error');\n                }\n            })\n    }\n\n    function handleLogout() {\n        localStorage.removeItem('jwt');\n        setLoggedIn(false);\n        history.push('/sign-in')\n\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"App\">\n                <Header\n                    loggedIn={loggedIn}\n                    onClick={handleLogout}\n                    email={userData}\n                />\n                <Switch>\n                    <ProtectedRoute\n                        exact\n                        path='/'\n                        loggedIn={loggedIn}\n                        component={Main}\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        handleCardClick={handleCardClick}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                    />\n                    <Route path='/sign-in'>\n                        <Login handleLogin={handleLogin}/>\n                    </Route>\n                    <Route path='/sign-up'>\n                        <Register handleRegister={handleRegister}/>\n                    </Route>\n                    <Route>\n                        {loggedIn ? <Redirect to='/'/> : <Redirect to='/sign-in'/>}\n                    </Route>\n                </Switch>\n                <Footer/>\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n                <PopupWithForm\n                    name=\"popup__with-submit\"\n                    container=\"popup__container-with-submit\"\n                    title=\"Вы уверены?\"\n                    submit=\"popup__submit-with-submit\"\n                    type=\"popup__title-with-submit\"\n                />\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups}\n                />\n                <InfoTooltip\n                    onClose={closeAllPopups}\n                    isInfoTooltipOpen={isInfoTooltipOpen}\n                    status={isTooltipStatus}\n                />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Header.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Footer.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Main.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/PopupWithForm.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Login.js",["84"],"import React from 'react';\n\nfunction Login({handleLogin}) {\n    const [data, setData] = React.useState({\n        logEmail: '',\n        logPassword: ''\n    });\n\n    const [message, setMessage] = React.useState('');\n\n    function handleChange(e) {\n        const {name, value} = e.target;\n        setData({\n            ...data,\n            [name]: value\n        })\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (!data.logEmail || !data.logPassword) {\n            return;\n        }\n        handleLogin(data.logEmail, data.logPassword);\n    }\n\n    return (\n        <div className=\"auth\">\n            <div className=\"auth__container\">\n                <form className=\"auth__form\"\n                      name=\"logForm\"\n                      onSubmit={handleSubmit}\n                >\n                    <h2 className=\"auth__title\">Вход</h2>\n                    <input className=\"auth__input\"\n                           id=\"user-email\"\n                           required\n                           minLength=\"2\"\n                           maxLength=\"40\"\n                           type=\"email\"\n                           placeholder=\"email\"\n                           name=\"logEmail\"\n                           value={data.email}\n                           onChange={handleChange}/>\n                    <span className=\"error\" id=\"user-email-error\">{message}</span>\n                    <input className=\"auth__input\"\n                           id=\"user-password\"\n                           required\n                           minLength=\"2\"\n                           maxLength=\"40\"\n                           type=\"password\"\n                           suggested=\"current-password\"\n                           placeholder=\"Пароль\"\n                           name=\"logPassword\"\n                           value={data.password}\n                           onChange={handleChange}/>\n                    <span className=\"error\" id=\"user-password-error\">{message}</span>\n                    <button className=\"auth__submit\" type=\"submit\">Войти</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Register.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/EditAvatarPopup.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/ImagePopup.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/ProtectedRoute.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/EditProfilePopup.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/AddPlacePopup.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/utils/Auth.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/utils/Api.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/contexts/CurrentUserContext.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/InfoTooltip.js",[],"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/Card.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":44,"column":8,"nodeType":"91","endLine":44,"endColumn":10,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":9,"column":21,"nodeType":"95","messageId":"96","endLine":9,"endColumn":31},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["99"],"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [tokenCheck]",{"range":"102","text":"103"},[1531,1533],"[tokenCheck]"]