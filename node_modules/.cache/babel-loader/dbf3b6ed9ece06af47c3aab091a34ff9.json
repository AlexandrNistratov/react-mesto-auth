{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aleksandrnistratov/Desktop/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({\n  onEditAvatar,\n  onEditProfile,\n  onAddPlace,\n  handleCardClick\n}) {\n  _s();\n\n  const [cards, setCards] = React.useState([]);\n  const userContext = React.useContext(CurrentUserContext);\n  React.useEffect(() => {\n    api.getAllCards().then(data => {\n      setCards(data);\n    }).catch(err => alert(err));\n  }, []); // Лайк\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.likeCard(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile__avatar-image\",\n            src: userContext.avatar,\n            alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__overlay\",\n            onClick: onEditAvatar,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile__edit-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__block\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__info-name\",\n              children: userContext.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile__edit-button\",\n              onClick: onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__info-text\",\n            children: userContext.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"Hutp7t1mNHz0MBAAfMIfDk+xEdw=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/aleksandrnistratov/Desktop/mesto-react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","onEditAvatar","onEditProfile","onAddPlace","handleCardClick","cards","setCards","useState","userContext","useContext","useEffect","getAllCards","then","data","catch","err","alert","handleCardLike","card","isLiked","likes","some","i","_id","currentUser","likeCard","newCard","newCards","map","c","avatar","name","about"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { api } from '../utils/Api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace,  handleCardClick}) {\n    const [cards, setCards] = React.useState([]);\n\n    const userContext = React.useContext(CurrentUserContext);\n\n    React.useEffect(() => {\n        api.getAllCards()\n            .then(data => {\n                setCards(data)\n            }).catch((err) => alert(err));\n    }, []);\n\n    // Лайк\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.likeCard(card._id, !isLiked).then((newCard) => {\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            // Обновляем стейт\n            setCards(newCards);\n        });\n    }\n\n    return(\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__info\">\n                    <div className=\"profile__avatar\">\n                        <img className=\"profile__avatar-image\" src={userContext.avatar} alt=\"Аватарка\"  />\n                        <div className=\"profile__overlay\"\n                             onClick={onEditAvatar}>\n                            <button className=\"profile__edit-avatar\"></button>\n                        </div>\n                    </div>\n                    <div className=\"profile__text\">\n                        <div className=\"profile__block\">\n                            <h1 className=\"profile__info-name\">{userContext.name}</h1>\n                            <button className=\"profile__edit-button\"\n                                    onClick={onEditProfile}>\n                            </button>\n                        </div>\n                        <p className=\"profile__info-text\">{userContext.about}</p>\n                    </div>\n                </div>\n                <button className=\"profile__add-button\"\n                        onClick={onAddPlace}>\n                </button>\n            </section>\n            <section className=\"elements\">\n                {\n                    cards.map((card) => <Card key={card._id} card={card} onCardClick={handleCardClick} onCardLike={handleCardLike} />)\n                }\n            </section>\n        </main>\n    )\n\n}\n\nexport default Main;\n\n\n\n"]},"metadata":{},"sourceType":"module"}