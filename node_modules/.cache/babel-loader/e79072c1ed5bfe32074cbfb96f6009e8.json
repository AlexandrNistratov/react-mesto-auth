{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from '../utils/Auth';\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport AddPlacePopup from './AddPlacePopup';\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = React.useState(false);\n  const [isTooltipStatus, setTooltipStatus] = React.useState('success');\n  const [currentUser, setCurrentUser] = React.useState('');\n  const history = useHistory();\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userData, setUserData] = React.useState({\n    email: '',\n    password: ''\n  });\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => alert(err));\n  }, []);\n\n  function handleInfoTooltipOpen(status) {\n    setInfoTooltipOpen(true);\n    setTooltipStatus(status);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(data) {\n    setSelectedCard(data);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setInfoTooltipOpen(false);\n    setSelectedCard(null);\n  } //Изменение инфо\n\n\n  function handleUpdateUser(data) {\n    api.addUserInfo(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => alert(err));\n  } // Изменение аватара\n\n\n  function handleUpdateAvatar(data) {\n    api.addUserAvatar(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => alert(err));\n  } //Отрисовка карточек с сервера\n\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getAllCards().then(data => {\n      setCards(data);\n    }).catch(err => alert(err));\n  }, []); // Лайк\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    isLiked ? //Отправляем запрос для удаления лайка\n    api.dislikeCard(card._id).then(res => {\n      const dislikeCard = cards.map(item => item._id === card._id ? res : item);\n      setCards(dislikeCard);\n    }).catch(err => alert(err)) : // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.likeCard(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => alert(err));\n  } // Удаление карточки\n\n\n  function handleCardDelete(card) {\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    if (isOwn) {\n      api.deleteCards(card._id).then(() => {\n        const filterCard = cards.filter(item => item._id !== card._id);\n        setCards(filterCard);\n      }).catch(err => alert(err));\n    }\n  } //Создаем новую карточку\n\n\n  function handleAddPlaceSubmit(data) {\n    api.addNewCards(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => alert(err));\n  }\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      Auth.getContent(jwt).then(res => {\n        console.log(res);\n        const userData = {\n          email: res.data.email,\n          password: res.data.password\n        };\n        setUserData(userData);\n        setLoggedIn(true);\n        history.push('/');\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleLogin(email, password) {\n    Auth.authorize(email, password).then(data => {\n      // console.log(data)\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        history.push('/');\n      } else {\n        localStorage.removeItem('jwt', data.token);\n      }\n    }).catch(err => console.log(err));\n  }\n\n  function handleRegister(email, password) {\n    Auth.register(email, password).then(res => {\n      // console.log(res)\n      if (res !== undefined && res.data._id) {\n        setUserData({\n          email: res.data.email\n        });\n        handleInfoTooltipOpen();\n        setTimeout(() => {\n          handleLogin(email, password);\n        }, 300);\n      } else {\n        handleInfoTooltipOpen('error');\n      }\n    });\n  }\n\n  function handleLogout() {\n    console.log(token);\n    localStorage.removeItem('jwt'); // setUserData({\n    //     email: '',\n    //     password: ''\n    // })\n\n    setLoggedIn(false);\n    history.push('/sign-in');\n  } // console.log(userData)\n\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        onClick: handleLogout,\n        email: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          handleCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"popup__with-submit\",\n        container: \"popup__container-with-submit\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        submit: \"popup__submit-with-submit\",\n        type: \"popup__title-with-submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        onClose: closeAllPopups,\n        isInfoTooltipOpen: isInfoTooltipOpen,\n        status: isTooltipStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"d0YDyfHdIFyHONA60AlfgDwmNfc=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","Redirect","Route","Switch","useHistory","Login","Register","InfoTooltip","Auth","React","api","CurrentUserContext","AddPlacePopup","ProtectedRoute","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","isInfoTooltipOpen","setInfoTooltipOpen","isTooltipStatus","setTooltipStatus","currentUser","setCurrentUser","history","loggedIn","setLoggedIn","userData","setUserData","email","password","useEffect","tokenCheck","getUserInfo","then","res","catch","err","alert","handleInfoTooltipOpen","status","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","data","closeAllPopups","handleUpdateUser","addUserInfo","handleUpdateAvatar","addUserAvatar","cards","setCards","getAllCards","handleCardLike","card","isLiked","likes","some","i","_id","dislikeCard","map","item","likeCard","newCard","newCards","c","handleCardDelete","isOwn","owner","deleteCards","filterCard","filter","handleAddPlaceSubmit","addNewCards","jwt","localStorage","getItem","getContent","console","log","push","handleLogin","authorize","token","setItem","removeItem","handleRegister","register","undefined","setTimeout","handleLogout"],"mappings":"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","sourcesContent":["import '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\n\nimport {Redirect, Route, Switch, useHistory} from 'react-router-dom';\n\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip'\nimport * as Auth from '../utils/Auth';\n\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport AddPlacePopup from './AddPlacePopup';\nimport ProtectedRoute from './ProtectedRoute';\n\n\n\n\nfunction App() {\n    const [ isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [ isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [ isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [ selectedCard, setSelectedCard] = React.useState(null);\n    const [ isInfoTooltipOpen, setInfoTooltipOpen ] = React.useState(false);\n    const [isTooltipStatus, setTooltipStatus] = React.useState('success');\n\n    const [currentUser, setCurrentUser] = React.useState('');\n\n    const history = useHistory();\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [userData, setUserData] = React.useState({\n        email: '',\n        password: ''\n    });\n\n\n    React.useEffect(() => {\n        tokenCheck();\n    },[]);\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then(res => {\n                setCurrentUser(res)\n            }).catch((err) => alert(err));\n    }, [])\n\n    function handleInfoTooltipOpen (status) {\n        setInfoTooltipOpen(true);\n        setTooltipStatus(status);\n    }\n\n    function handleEditAvatarClick () {\n        setEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick () {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick () {\n        setAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(data) {\n        setSelectedCard(data);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false);\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setInfoTooltipOpen(false)\n        setSelectedCard(null);\n    }\n    //Изменение инфо\n    function handleUpdateUser(data) {\n        api.addUserInfo(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n    // Изменение аватара\n    function handleUpdateAvatar(data) {\n        api.addUserAvatar(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n    //Отрисовка карточек с сервера\n    const [cards, setCards] = React.useState([]);\n    React.useEffect(() => {\n        api.getAllCards()\n            .then(data => {\n                setCards(data)\n            }).catch((err) => alert(err));\n    }, []);\n\n    // Лайк\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        isLiked ? (\n            //Отправляем запрос для удаления лайка\n            api.dislikeCard(card._id).then((res) => {\n                const dislikeCard = cards.map((item) => item._id === card._id ? res : item);\n                setCards(dislikeCard)\n            }).catch((err) => alert(err))\n        ) : (\n            // Отправляем запрос в API и получаем обновлённые данные карточки\n            api.likeCard(card._id, !isLiked).then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                // Обновляем стейт\n                setCards(newCards);\n            }).catch((err) => alert(err))\n        )\n    }\n    // Удаление карточки\n    function  handleCardDelete(card) {\n        // Определяем, являемся ли мы владельцем текущей карточки\n        const isOwn = card.owner._id === currentUser._id;\n\n        if (isOwn) {\n            api.deleteCards(card._id).then(() => {\n                const filterCard = cards.filter((item) => item._id !== card._id)\n                setCards(filterCard);\n            }).catch((err) => alert(err));\n        }\n    }\n    //Создаем новую карточку\n    function handleAddPlaceSubmit(data) {\n        api.addNewCards(data).then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n\n\n\n    function tokenCheck () {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            Auth.getContent(jwt)\n                .then((res) => {\n                    console.log(res)\n                    const userData = {\n                        email: res.data.email,\n                        password: res.data.password\n                    }\n                    setUserData(userData);\n                    setLoggedIn(true);\n                    history.push('/');\n                }).catch(err => {\n                console.log(err)\n            })\n        }\n    }\n\n    function handleLogin (email, password) {\n        Auth.authorize(email, password)\n            .then((data) => {\n                // console.log(data)\n                if (data.token) {\n                    localStorage.setItem('jwt', data.token);\n                    history.push('/');\n                } else {\n                    localStorage.removeItem('jwt', data.token);\n                }\n            }).catch(err => console.log(err))\n    }\n\n    function handleRegister (email, password) {\n        Auth.register(email, password)\n            .then((res) => {\n                // console.log(res)\n                if (res !== undefined && res.data._id ) {\n                    setUserData({\n                        email: res.data.email\n                    })\n                    handleInfoTooltipOpen();\n                    setTimeout(() => {\n                        handleLogin(email, password);\n                        }, 300);\n                    } else {\n                    handleInfoTooltipOpen('error');\n                }\n            })\n    }\n\n    function handleLogout () {\n        console.log(token)\n        localStorage.removeItem('jwt');\n        // setUserData({\n        //     email: '',\n        //     password: ''\n        // })\n        setLoggedIn(false);\n        history.push('/sign-in')\n    }\n\n    // console.log(userData)\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"App\">\n                        <Header\n                        loggedIn={loggedIn}\n                        onClick={handleLogout}\n                        email={userData}\n                        />\n                        <Switch>\n                            <ProtectedRoute\n                                exact\n                                path='/'\n                                loggedIn={loggedIn}\n                                component={Main}\n                                onEditAvatar={handleEditAvatarClick}\n                                onEditProfile={handleEditProfileClick}\n                                onAddPlace={handleAddPlaceClick}\n                                handleCardClick={handleCardClick}\n                                cards={cards}\n                                onCardLike={handleCardLike}\n                                onCardDelete={handleCardDelete}\n                                />\n                            <Route path='/sign-in'>\n                                <Login handleLogin={handleLogin}/>\n                            </Route>\n                            <Route path='/sign-up'>\n                                <Register handleRegister={handleRegister}/>\n                            </Route>\n                            <Route>\n                                {loggedIn ? <Redirect to='/' /> : <Redirect to='/sign-in' />}\n                            </Route>\n                        </Switch>\n                        <Footer />\n                        <EditAvatarPopup\n                            isOpen={isEditAvatarPopupOpen}\n                            onClose={closeAllPopups}\n                            onUpdateAvatar={handleUpdateAvatar}\n                        />\n                        <EditProfilePopup\n                            isOpen={isEditProfilePopupOpen}\n                            onClose={closeAllPopups}\n                            onUpdateUser={handleUpdateUser}\n                        />\n                        <AddPlacePopup\n                            isOpen={isAddPlacePopupOpen}\n                            onClose={closeAllPopups}\n                            onAddPlace={handleAddPlaceSubmit}\n                        />\n                        <PopupWithForm\n                            name=\"popup__with-submit\"\n                            container=\"popup__container-with-submit\"\n                            title=\"Вы уверены?\"\n                            submit=\"popup__submit-with-submit\"\n                            type=\"popup__title-with-submit\"\n                        />\n                        <ImagePopup\n                            card={selectedCard}\n                            onClose={closeAllPopups}\n                        />\n                        <InfoTooltip\n                            onClose={closeAllPopups}\n                            isInfoTooltipOpen={isInfoTooltipOpen}\n                            status={isTooltipStatus}\n                        />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}