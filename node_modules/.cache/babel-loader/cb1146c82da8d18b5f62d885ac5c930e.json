{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from '../utils/Auth';\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport AddPlacePopup from './AddPlacePopup';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState('');\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => alert(err));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(data) {\n    setSelectedCard(data);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  } //Изменение инфо\n\n\n  function handleUpdateUser(data) {\n    api.addUserInfo(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => alert(err));\n  } // Изменение аватара\n\n\n  function handleUpdateAvatar(data) {\n    api.addUserAvatar(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => alert(err));\n  } //Отрисовка карточек с сервера\n\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getAllCards().then(data => {\n      setCards(data);\n    }).catch(err => alert(err));\n  }, []); // Лайк\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    isLiked ? //Отправляем запрос для удаления лайка\n    api.dislikeCard(card._id).then(res => {\n      const dislikeCard = cards.map(item => item._id === card._id ? res : item);\n      setCards(dislikeCard);\n    }).catch(err => alert(err)) : // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.likeCard(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => alert(err));\n  }\n\n  ; // Удаление карточки\n\n  function handleCardDelete(card) {\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    if (isOwn) {\n      api.deleteCards(card._id).then(() => {\n        const filterCard = cards.filter(item => item._id !== card._id);\n        setCards(filterCard);\n      }).catch(err => alert(err));\n    }\n  } //Создаем новую карточку\n\n\n  function handleAddPlaceSubmit(data) {\n    api.addNewCards(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => alert(err));\n  }\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userData, setUserData] = React.useState({\n    email: '',\n    password: ''\n  });\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {// Auth.getContent(jwt)\n      //     .then((res) => {\n      //         let userData = {\n      //             email: res.email,\n      //             password: res.password\n      //         }\n      //         setState({\n      //             loggedIn: true,\n      //             userData\n      //         }, () => {\n      //             history.push('/');\n      //         })\n      //     })\n    }\n  }\n\n  function handleLogin() {}\n\n  function handleRegister() {}\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          handleCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"popup__with-submit\",\n          container: \"popup__container-with-submit\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          submit: \"popup__submit-with-submit\",\n          type: \"popup__title-with-submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"U+IQc6QTiXU5MkSivP3VqdCoH+4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","Login","Register","InfoTooltip","Auth","React","api","CurrentUserContext","AddPlacePopup","Route","Switch","Redirect","withRouter","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","useEffect","getUserInfo","then","res","catch","err","alert","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","data","closeAllPopups","handleUpdateUser","addUserInfo","handleUpdateAvatar","addUserAvatar","cards","setCards","getAllCards","handleCardLike","card","isLiked","likes","some","i","_id","dislikeCard","map","item","likeCard","newCard","newCards","c","handleCardDelete","isOwn","owner","deleteCards","filterCard","filter","handleAddPlaceSubmit","addNewCards","loggedIn","setLoggedIn","userData","setUserData","email","password","tokenCheck","jwt","localStorage","getItem","handleLogin","handleRegister"],"mappings":"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","sourcesContent":["import '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\n\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip'\nimport * as Auth from '../utils/Auth';\n\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport AddPlacePopup from './AddPlacePopup';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\n\n\nfunction App() {\n    const [ isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [ isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [ isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [ selectedCard, setSelectedCard] = React.useState(null);\n\n    const [currentUser, setCurrentUser] = React.useState('');\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then(res => {\n                setCurrentUser(res)\n            }).catch((err) => alert(err));\n    }, [])\n\n    function handleEditAvatarClick () {\n        setEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick () {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick () {\n        setAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(data) {\n        setSelectedCard(data);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false);\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setSelectedCard(null);\n    }\n    //Изменение инфо\n    function handleUpdateUser(data) {\n        api.addUserInfo(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n    // Изменение аватара\n    function handleUpdateAvatar(data) {\n        api.addUserAvatar(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n    //Отрисовка карточек с сервера\n    const [cards, setCards] = React.useState([]);\n    React.useEffect(() => {\n        api.getAllCards()\n            .then(data => {\n                setCards(data)\n            }).catch((err) => alert(err));\n    }, []);\n\n    // Лайк\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        isLiked ? (\n            //Отправляем запрос для удаления лайка\n            api.dislikeCard(card._id).then((res) => {\n                const dislikeCard = cards.map((item) => item._id === card._id ? res : item);\n                setCards(dislikeCard)\n            }).catch((err) => alert(err))\n        ) : (\n            // Отправляем запрос в API и получаем обновлённые данные карточки\n            api.likeCard(card._id, !isLiked).then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                // Обновляем стейт\n                setCards(newCards);\n            }).catch((err) => alert(err))\n        )\n    };\n    // Удаление карточки\n    function  handleCardDelete(card) {\n        // Определяем, являемся ли мы владельцем текущей карточки\n        const isOwn = card.owner._id === currentUser._id;\n\n        if (isOwn) {\n            api.deleteCards(card._id).then(() => {\n                const filterCard = cards.filter((item) => item._id !== card._id)\n                setCards(filterCard);\n            }).catch((err) => alert(err));\n        }\n    }\n    //Создаем новую карточку\n    function handleAddPlaceSubmit(data) {\n        api.addNewCards(data).then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [userData, setUserData] = React.useState({\n        email: '',\n        password: ''\n    });\n\n    React.useEffect(() => {\n        tokenCheck();\n    },[]);\n\n    function tokenCheck () {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            // Auth.getContent(jwt)\n            //     .then((res) => {\n            //         let userData = {\n            //             email: res.email,\n            //             password: res.password\n            //         }\n            //         setState({\n            //             loggedIn: true,\n            //             userData\n            //         }, () => {\n            //             history.push('/');\n            //         })\n            //     })\n        }\n    }\n\n    function handleLogin () {\n\n    }\n\n    function handleRegister () {\n\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"App\">\n                <Switch>\n                    <Header />\n                    <Main\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        handleCardClick={handleCardClick}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n\n                    />\n                    <Footer />\n                    <EditAvatarPopup\n                        isOpen={isEditAvatarPopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateAvatar={handleUpdateAvatar}\n                    />\n                    <EditProfilePopup\n                        isOpen={isEditProfilePopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateUser={handleUpdateUser}\n                    />\n                    <AddPlacePopup\n                        isOpen={isAddPlacePopupOpen}\n                        onClose={closeAllPopups}\n                        onAddPlace={handleAddPlaceSubmit}\n                    />\n                    <PopupWithForm\n                        name=\"popup__with-submit\"\n                        container=\"popup__container-with-submit\"\n                        title=\"Вы уверены?\"\n                        submit=\"popup__submit-with-submit\"\n                        type=\"popup__title-with-submit\"\n                    />\n                    <ImagePopup\n                        card={selectedCard}\n                        onClose={closeAllPopups}\n                    />\n                    <Route>\n                        <Login />\n                    </Route>\n                </Switch>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}