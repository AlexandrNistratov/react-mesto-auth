{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  getUserInfo() {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-18/users/me', {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    });\n  }\n\n  addUserInfo(data) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-18/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.firstname,\n        description: data.career\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    });\n  }\n\n  getAllCards() {\n    return fetch(this._url, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    });\n  }\n\n  addNewCards(data) {\n    return fetch(this._url, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    });\n  }\n\n  deleteCards(id) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-18/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    });\n  }\n\n  likeCard(likeId) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-18/cards/likes/${likeId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    });\n  }\n\n  dislikeCard(likeId) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-18/cards/likes/${likeId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    });\n  }\n\n  addUserAvatar(data) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-18/users/me/avatar ', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    });\n  }\n\n}\n\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-18/cards',\n  headers: {\n    authorization: 'e2315ec0-9d36-47b6-91be-ca15417afdd8',\n    'content-type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/aleksandrnistratov/Desktop/mesto-react/src/utils/Api.js"],"names":["Api","constructor","config","_url","url","_headers","headers","getUserInfo","fetch","method","then","res","ok","json","Promise","reject","status","addUserInfo","data","body","JSON","stringify","name","firstname","description","career","getAllCards","addNewCards","link","deleteCards","id","likeCard","likeId","dislikeCard","addUserAvatar","avatar","api","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKC,IAAL,GAAYD,MAAM,CAACE,GAAnB;AACA,SAAKC,QAAL,GAAgBH,MAAM,CAACI,OAAvB;AACD;;AAEDC,EAAAA,WAAW,GAAI;AACb,WAAOC,KAAK,CAAC,sDAAD,EAAyD;AACnEC,MAAAA,MAAM,EAAE,KAD2D;AAEnEH,MAAAA,OAAO,EAAE,KAAKD;AAFqD,KAAzD,CAAL,CAGJK,IAHI,CAGEC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEM;AACJ,eAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,KATM,CAAP;AAUD;;AAEDC,EAAAA,WAAW,CAAEC,IAAF,EAAQ;AACjB,WAAOV,KAAK,CAAC,sDAAD,EAAyD;AACnEC,MAAAA,MAAM,EAAE,OAD2D;AAEnEH,MAAAA,OAAO,EAAE,KAAKD,QAFqD;AAGnEc,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAEJ,IAAI,CAACK,SADQ;AAEnBC,QAAAA,WAAW,EAAEN,IAAI,CAACO;AAFC,OAAf;AAH6D,KAAzD,CAAL,CAOJf,IAPI,CAOEC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEM;AACJ,eAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,KAbM,CAAP;AAcD;;AAEDU,EAAAA,WAAW,GAAG;AACZ,WAAOlB,KAAK,CAAC,KAAKL,IAAN,EAAW;AACrBM,MAAAA,MAAM,EAAE,KADa;AAErBH,MAAAA,OAAO,EAAE,KAAKD;AAFO,KAAX,CAAL,CAGJK,IAHI,CAGEC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEM;AACJ,eAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,KATM,CAAP;AAUD;;AAEDW,EAAAA,WAAW,CAACT,IAAD,EAAO;AAChB,WAAOV,KAAK,CAAC,KAAKL,IAAN,EAAW;AACrBM,MAAAA,MAAM,EAAE,MADa;AAErBH,MAAAA,OAAO,EAAE,KAAKD,QAFO;AAGrBc,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IADQ;AAEnBM,QAAAA,IAAI,EAAEV,IAAI,CAACU;AAFQ,OAAf;AAHe,KAAX,CAAL,CAOJlB,IAPI,CAOEC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEM;AACJ,eAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,KAbM,CAAP;AAcD;;AAEDa,EAAAA,WAAW,CAACC,EAAD,EAAK;AACd,WAAOtB,KAAK,CAAE,qDAAoDsB,EAAG,EAAzD,EAA2D;AACrErB,MAAAA,MAAM,EAAE,QAD6D;AAErEH,MAAAA,OAAO,EAAE,KAAKD;AAFuD,KAA3D,CAAL,CAGFK,IAHE,CAGIC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEM;AACJ,eAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACJ,KATM,CAAP;AAUD;;AAEDe,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACf,WAAOxB,KAAK,CAAE,2DAA0DwB,MAAO,EAAnE,EAAsE;AAChFvB,MAAAA,MAAM,EAAE,KADwE;AAEhFH,MAAAA,OAAO,EAAE,KAAKD;AAFkE,KAAtE,CAAL,CAGJK,IAHI,CAGEC,GAAD,IAAS;AACf,UAAGA,GAAG,CAACC,EAAP,EAAW;AACT,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEO;AACL,eAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,KATM,CAAP;AAUD;;AAEDiB,EAAAA,WAAW,CAACD,MAAD,EAAS;AAClB,WAAOxB,KAAK,CAAE,2DAA0DwB,MAAO,EAAnE,EAAsE;AAChFvB,MAAAA,MAAM,EAAE,QADwE;AAEhFH,MAAAA,OAAO,EAAE,KAAKD;AAFkE,KAAtE,CAAL,CAGJK,IAHI,CAGEC,GAAD,IAAS;AACf,UAAGA,GAAG,CAACC,EAAP,EAAW;AACT,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEO;AACL,eAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,KATM,CAAP;AAUD;;AAEDkB,EAAAA,aAAa,CAAEhB,IAAF,EAAQ;AACnB,WAAOV,KAAK,CAAC,8DAAD,EAAiE;AAC3EC,MAAAA,MAAM,EAAE,OADmE;AAE3EH,MAAAA,OAAO,EAAE,KAAKD,QAF6D;AAG3Ec,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBc,QAAAA,MAAM,EAAEjB,IAAI,CAACiB;AADM,OAAf;AAHqE,KAAjE,CAAL,CAMJzB,IANI,CAMEC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAFD,MAEM;AACJ,eAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF,KAZM,CAAP;AAaD;;AAvHO;;AA0HV,OAAQ,MAAMoB,GAAG,GAAG,IAAIpC,GAAJ,CAAQ;AAC1BI,EAAAA,GAAG,EAAE,mDADqB;AAE1BE,EAAAA,OAAO,EAAE;AACP+B,IAAAA,aAAa,EAAE,sCADR;AAEP,oBAAgB;AAFT;AAFiB,CAAR,CAAZ","sourcesContent":["class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  getUserInfo () {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-18/users/me', {\n      method: 'GET',\n      headers: this._headers\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  addUserInfo (data) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-18/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.firstname,\n        description: data.career\n      })\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  getAllCards() {\n    return fetch(this._url,{\n      method: 'GET',\n      headers: this._headers\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  addNewCards(data) {\n    return fetch(this._url,{\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  deleteCards(id) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-18/cards/${id}`,{\n      method: 'DELETE',\n      headers: this._headers,\n      }).then((res) => {\n        if (res.ok) {\n          return res.json();\n        }else {\n          return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    })\n  }\n\n  likeCard(likeId) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-18/cards/likes/${likeId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    }).then((res) => {\n      if(res.ok) {\n        return res.json();\n      }else  {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  dislikeCard(likeId) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-18/cards/likes/${likeId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then((res) => {\n      if(res.ok) {\n        return res.json();\n      }else  {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  addUserAvatar (data) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-18/users/me/avatar ', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n}\n\nexport  const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-18/cards',\n  headers: {\n    authorization: 'e2315ec0-9d36-47b6-91be-ca15417afdd8',\n    'content-type': 'application/json'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}