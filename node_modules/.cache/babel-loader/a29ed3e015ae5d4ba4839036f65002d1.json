{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/InfoTooltip.js\";\nimport React from 'react';\nimport Union from \"../image/Union.svg\";\nimport UnionError from \"../image/UnionError.svg\";\n\nfunction InfoTooltip({\n  isTooltipStatus,\n  onClose,\n  isInfoTooltipOpen\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isInfoTooltipOpen ? `popup popup__result popup_is-opened` : `popup popup__result`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container popup__container-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close popup__close-result\",\n        type: \"button\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), isTooltipStatus === 'error' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"popup__result_image\",\n          src: UnionError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__result_container_text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"popup__result_text\",\n            children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A! \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"popup__result_image\",\n          src: Union\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__result_container_text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"popup__result_text\",\n            children: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = InfoTooltip;\nexport default InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/InfoTooltip.js"],"names":["React","InfoTooltip","isTooltipStatus","onClose","isInfoTooltipOpen","UnionError","Union"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAKA,SAASC,WAAT,CAAsB;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAtB,EAAqE;AACjE,sBACI;AAAK,IAAA,SAAS,EAAEA,iBAAiB,GAAI,qCAAJ,GAA4C,qBAA7E;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,IAAI,EAAC,QAA1D;AACQ,QAAA,OAAO,EAAED;AADjB;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKD,eAAe,KAAK,OAApB,gBACD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAqC,UAAA,GAAG,EAAEG;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADC,gBAQD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAqC,UAAA,GAAG,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;KA1BQL,W;AA4BT,eAAeA,WAAf","sourcesContent":["import React from 'react';\n\nimport Union from '../image/Union.svg'\nimport UnionError from '../image/UnionError.svg'\n\nfunction InfoTooltip ({isTooltipStatus, onClose, isInfoTooltipOpen}) {\n    return (\n        <div className={isInfoTooltipOpen ? `popup popup__result popup_is-opened` : `popup popup__result`}>\n            <div className=\"popup__container popup__container-result\">\n                <button className=\"popup__close popup__close-result\" type=\"button\"\n                        onClick={onClose}>\n                </button>\n                {isTooltipStatus === 'error' ?\n                <>\n                    <img className=\"popup__result_image\" src={UnionError}/>\n                    <div className=\"popup__result_container_text\">\n                        <h2 className=\"popup__result_text\">Что-то пошло не так!\n                            Попробуйте ещё раз.</h2>\n                    </div>\n                </> :\n                <>\n                    <img className=\"popup__result_image\" src={Union}/>\n                    <div className=\"popup__result_container_text\">\n                        <h2 className=\"popup__result_text\">Вы успешно зарегистрировались!</h2>\n                    </div>\n                </>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default InfoTooltip;"]},"metadata":{},"sourceType":"module"}