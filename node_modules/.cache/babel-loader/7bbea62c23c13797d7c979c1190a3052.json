{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport * as Auth from '../utils/Auth';\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport AddPlacePopup from './AddPlacePopup';\nimport { Route, Switch, Redirect, BrowserRouter, useHistory } from 'react-router-dom';\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState('');\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => alert(err));\n  }, []);\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(data) {\n    setSelectedCard(data);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  } //Изменение инфо\n\n\n  function handleUpdateUser(data) {\n    api.addUserInfo(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => alert(err));\n  } // Изменение аватара\n\n\n  function handleUpdateAvatar(data) {\n    api.addUserAvatar(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => alert(err));\n  } //Отрисовка карточек с сервера\n\n\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getAllCards().then(data => {\n      setCards(data);\n    }).catch(err => alert(err));\n  }, []); // Лайк\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    isLiked ? //Отправляем запрос для удаления лайка\n    api.dislikeCard(card._id).then(res => {\n      const dislikeCard = cards.map(item => item._id === card._id ? res : item);\n      setCards(dislikeCard);\n    }).catch(err => alert(err)) : // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.likeCard(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    }).catch(err => alert(err));\n  }\n\n  ; // Удаление карточки\n\n  function handleCardDelete(card) {\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    if (isOwn) {\n      api.deleteCards(card._id).then(() => {\n        const filterCard = cards.filter(item => item._id !== card._id);\n        setCards(filterCard);\n      }).catch(err => alert(err));\n    }\n  } //Создаем новую карточку\n\n\n  function handleAddPlaceSubmit(data) {\n    api.addNewCards(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => alert(err));\n  }\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userData, setUserData] = React.useState({\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      Auth.getContent(jwt).then(res => {\n        const userData = {\n          email: res.email,\n          password: res.password\n        };\n        setUserData(userData, {\n          loggedIn: true\n        }, () => {\n          history.push('/');\n        });\n      });\n    }\n  }\n\n  function handleLogin(email, password) {\n    Auth.authorize(email, password).then(data => {\n      if (data.statusCode === 400) {\n        throw new Error('400 - некорректно заполнено одно из полей');\n      }\n\n      if (data.jwt) {\n        localStorage.setItem('jwt', data.jwt);\n        setLoggedIn(true);\n        setUserData(data.user);\n      }\n\n      console.log(data);\n    }).catch(e => console.log(e));\n  }\n\n  function handleRegister(email, password) {\n    Auth.register(email, password).then(res => {\n      console.log(res);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        handleCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"popup__with-submit\",\n        container: \"popup__container-with-submit\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        submit: \"popup__submit-with-submit\",\n        type: \"popup__title-with-submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            to: true,\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            to: true,\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              handleRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"h1PcnpXyi6/GA0D8E69ZcncwiMk=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aleksandrnistratov/Desktop/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","Login","Register","InfoTooltip","Auth","React","api","CurrentUserContext","AddPlacePopup","Route","Switch","Redirect","BrowserRouter","useHistory","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","useEffect","getUserInfo","then","res","catch","err","alert","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","data","closeAllPopups","handleUpdateUser","addUserInfo","handleUpdateAvatar","addUserAvatar","cards","setCards","getAllCards","handleCardLike","card","isLiked","likes","some","i","_id","dislikeCard","map","item","likeCard","newCard","newCards","c","handleCardDelete","isOwn","owner","deleteCards","filterCard","filter","handleAddPlaceSubmit","addNewCards","loggedIn","setLoggedIn","userData","setUserData","email","password","history","tokenCheck","jwt","localStorage","getItem","getContent","push","handleLogin","authorize","statusCode","Error","setItem","user","console","log","e","handleRegister","register"],"mappings":"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","sourcesContent":["import '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\n\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip'\nimport * as Auth from '../utils/Auth';\n\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport AddPlacePopup from './AddPlacePopup';\nimport {Route, Switch, Redirect, BrowserRouter, useHistory} from 'react-router-dom';\n\n\n\nfunction App() {\n    const [ isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [ isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [ isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [ selectedCard, setSelectedCard] = React.useState(null);\n\n    const [currentUser, setCurrentUser] = React.useState('');\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then(res => {\n                setCurrentUser(res)\n            }).catch((err) => alert(err));\n    }, [])\n\n    function handleEditAvatarClick () {\n        setEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick () {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick () {\n        setAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(data) {\n        setSelectedCard(data);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false);\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setSelectedCard(null);\n    }\n    //Изменение инфо\n    function handleUpdateUser(data) {\n        api.addUserInfo(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n    // Изменение аватара\n    function handleUpdateAvatar(data) {\n        api.addUserAvatar(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n    //Отрисовка карточек с сервера\n    const [cards, setCards] = React.useState([]);\n    React.useEffect(() => {\n        api.getAllCards()\n            .then(data => {\n                setCards(data)\n            }).catch((err) => alert(err));\n    }, []);\n\n    // Лайк\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        isLiked ? (\n            //Отправляем запрос для удаления лайка\n            api.dislikeCard(card._id).then((res) => {\n                const dislikeCard = cards.map((item) => item._id === card._id ? res : item);\n                setCards(dislikeCard)\n            }).catch((err) => alert(err))\n        ) : (\n            // Отправляем запрос в API и получаем обновлённые данные карточки\n            api.likeCard(card._id, !isLiked).then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                // Обновляем стейт\n                setCards(newCards);\n            }).catch((err) => alert(err))\n        )\n    };\n    // Удаление карточки\n    function  handleCardDelete(card) {\n        // Определяем, являемся ли мы владельцем текущей карточки\n        const isOwn = card.owner._id === currentUser._id;\n\n        if (isOwn) {\n            api.deleteCards(card._id).then(() => {\n                const filterCard = cards.filter((item) => item._id !== card._id)\n                setCards(filterCard);\n            }).catch((err) => alert(err));\n        }\n    }\n    //Создаем новую карточку\n    function handleAddPlaceSubmit(data) {\n        api.addNewCards(data).then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [userData, setUserData] = React.useState({\n        email: '',\n        password: ''\n    });\n\n    const history = useHistory();\n\n    React.useEffect(() => {\n        tokenCheck();\n    },[]);\n\n    function tokenCheck () {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            Auth.getContent(jwt)\n                .then((res) => {\n                    const userData = {\n                        email: res.email,\n                        password: res.password\n                    }\n                    setUserData(\n                        userData,{\n                        loggedIn: true\n                    }, () => {\n                        history.push('/');\n                    })\n                })\n        }\n    }\n\n    function handleLogin (email, password) {\n        Auth.authorize(email, password)\n            .then((data) => {\n                if (data.statusCode === 400) {\n                    throw new Error ('400 - некорректно заполнено одно из полей')\n                }\n                if (data.jwt) {\n                    localStorage.setItem('jwt', data.jwt);\n                    setLoggedIn(true);\n                    setUserData(data.user)\n                }\n                console.log(data)\n\n            }).catch(e => console.log(e))\n    }\n\n    function handleRegister (email, password) {\n        Auth.register(email, password)\n            .then((res) => {\n                console.log(res)\n            })\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"App\">\n                        <Header />\n                        <Main\n                            onEditAvatar={handleEditAvatarClick}\n                            onEditProfile={handleEditProfileClick}\n                            onAddPlace={handleAddPlaceClick}\n                            handleCardClick={handleCardClick}\n                            cards={cards}\n                            onCardLike={handleCardLike}\n                            onCardDelete={handleCardDelete}\n\n                        />\n                        <Footer />\n                        <EditAvatarPopup\n                            isOpen={isEditAvatarPopupOpen}\n                            onClose={closeAllPopups}\n                            onUpdateAvatar={handleUpdateAvatar}\n                        />\n                        <EditProfilePopup\n                            isOpen={isEditProfilePopupOpen}\n                            onClose={closeAllPopups}\n                            onUpdateUser={handleUpdateUser}\n                        />\n                        <AddPlacePopup\n                            isOpen={isAddPlacePopupOpen}\n                            onClose={closeAllPopups}\n                            onAddPlace={handleAddPlaceSubmit}\n                        />\n                        <PopupWithForm\n                            name=\"popup__with-submit\"\n                            container=\"popup__container-with-submit\"\n                            title=\"Вы уверены?\"\n                            submit=\"popup__submit-with-submit\"\n                            type=\"popup__title-with-submit\"\n                        />\n                        <ImagePopup\n                            card={selectedCard}\n                            onClose={closeAllPopups}\n                        />\n                <BrowserRouter>\n                    <Switch>\n                        <Route to path='/sign-in'>\n                            <Login handleLogin={handleLogin}/>\n                        </Route>\n                        <Route to path='/sign-up'>\n                            <Register handleRegister={handleRegister}/>\n                        </Route>\n                        <InfoTooltip onClose={closeAllPopups}/>\n                    </Switch>\n                </BrowserRouter>\n\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}