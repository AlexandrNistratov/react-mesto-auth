{"version":3,"sources":["image/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","utils/Api.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","length","Main","onEditAvatar","onEditProfile","onAddPlace","handleCardClick","cards","avatar","about","map","Footer","PopupWithForm","isOpen","container","onClose","title","children","type","submit","textSubmitButton","onSubmit","noValidate","ImagePopup","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","id","required","minLength","maxLength","placeholder","value","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","api","config","this","_url","url","_headers","headers","fetch","method","then","res","ok","json","Promise","reject","status","data","body","JSON","stringify","likeId","authorization","AddPlacePopup","newCardNameRef","newCardLinkRef","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","closeAllPopups","getUserInfo","catch","err","alert","setCards","getAllCards","Provider","dislikeCard","item","likeCard","newCard","newCards","c","deleteCards","filterCard","filter","addUserAvatar","addUserInfo","addNewCards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bd76126.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import logo from '../image/logo.svg';\n\nfunction Header() {\n    return (\n            <header className=\"header\">\n                <img className=\"header__logo\" src={logo} alt=\"Логотип Mesto\" />\n            </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nexport const CurrentUserContext = React.createContext();","import React from 'react'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `card__del ${isOwn ? 'card__del-active' : 'card__del'}`\n    );\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n// Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (\n        `card__button ${isLiked ? 'card__button-like' : 'card__button'}`\n    );\n\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    function handleLikeClick() {\n        onCardLike(card)\n    }\n\n    function handleDeleteClick() {\n        onCardDelete(card)\n    }\n\n    return (\n        <li className=\"card\">\n            <img className=\"card__image\" src={card.link} alt={card.name}\n                 onClick={handleClick}/>\n            <button className={cardDeleteButtonClassName}\n            onClick={handleDeleteClick}>\n            </button>\n            <div className=\"card__items\">\n                <h2 className=\"card__title\">{card.name}</h2>\n                <div className=\"card__item\">\n                    <button className={cardLikeButtonClassName}\n                    onClick={handleLikeClick}>\n                    </button>\n                    <p className=\"card__number-likes\">{card.likes.length}</p>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace,  handleCardClick, cards, onCardDelete, onCardLike}) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return(\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__info\">\n                    <div className=\"profile__avatar\">\n                        <img className=\"profile__avatar-image\" src={currentUser.avatar} alt=\"Аватарка\"  />\n                        <div className=\"profile__overlay\"\n                             onClick={onEditAvatar}>\n                            <button className=\"profile__edit-avatar\"></button>\n                        </div>\n                    </div>\n                    <div className=\"profile__text\">\n                        <div className=\"profile__block\">\n                            <h1 className=\"profile__info-name\">{currentUser.name}</h1>\n                            <button className=\"profile__edit-button\"\n                                    onClick={onEditProfile}>\n                            </button>\n                        </div>\n                        <p className=\"profile__info-text\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button className=\"profile__add-button\"\n                        onClick={onAddPlace}>\n                </button>\n            </section>\n            <section className=\"elements\">\n                {\n                    cards.map((card) => <Card key={card._id} card={card} onCardClick={handleCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />)\n                }\n            </section>\n        </main>\n    )\n\n}\n\nexport default Main;","function Footer() {\n    return(\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy;&nbsp;2020 Mesto Russia</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nfunction PopupWithForm({ isOpen, name, container, onClose, title, children, type, submit, textSubmitButton, onSubmit}) {\n    return (\n        <div className={isOpen ? `popup popup__${name} popup_is-opened` : `popup popup__${name}`}>\n            <div className={`popup__container popup__container-${container}`}>\n                <form onSubmit={onSubmit} className={`popup__form popup__form-${name}`} name=\"information\" noValidate >\n                    <button className={`popup__close`} type=\"button\"\n                            onClick={onClose}>\n                    </button>\n                    <h2 className={`popup__title popup__title-${type}`}>{title}</h2>\n                    {children}\n                    <button className={`popup__submit popup__submit-${submit}`} type=\"submit\">{textSubmitButton}</button>\n                </form>\n            </div>\n        </div>\n    )\n}\nexport default PopupWithForm;","function ImagePopup({card, onClose}) {\n    return (\n        <div className={card ? \"popup popup__open-card popup_is-opened\" : \"popup popup__open-card\"}>\n            <div className=\"popup__card\">\n                <button className=\"popup__close popup__close-card\" type=\"button\"\n                    onClick={onClose}>\n                </button>\n                <img className=\"popup__image\" src={card ? card.link : \"\"}\n                     alt={card ? card.name : \"\"} />\n                <h2 className=\"popup__text\">{card ? card.name : \"\"}</h2>\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup;","import PopupWithForm from './PopupWithForm';\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser }) {\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    function handleChangeName(e) {\n        setName(e.target.value)\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value)\n    }\n\n    const currentUser = React.useContext(CurrentUserContext);\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        onUpdateUser({\n            name: name,\n            about: description,\n        });\n    }\n\n    return(\n        <PopupWithForm\n            name=\"info\"\n            container=\"min\"\n            title=\"Редактировать профиль\"\n            submit=\"min\"\n            textSubmitButton=\"Сохранить\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n        >\n            <input className=\"popup__input popup__input_type_firstname\" id=\"user-name\" required minLength=\"2\"\n                   maxLength=\"40\"\n                   type=\"text\" placeholder=\"Имя\" name=\"firstname\" value={name || ''} onChange={handleChangeName} />\n            <span className=\"error\" id=\"user-name-error\"></span>\n            <input className=\"popup__input popup__input_type_career\" id=\"user-career\" required minLength=\"2\"\n                   maxLength=\"200\"\n                   type=\"text\" placeholder=\"Работа\" name=\"career\" value={description || ''} onChange={handleChangeDescription} />\n            <span className=\"error\" id=\"user-career-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n    const avatarRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        onUpdateAvatar({\n            avatar: avatarRef.current.value\n        });\n\n    }\n\n    React.useEffect(() => {\n        if(isOpen){\n            avatarRef.current.value = '';\n        }\n    },[isOpen])\n\n    return(\n        <PopupWithForm\n            name=\"avatar-edit\"\n            container=\"avatar-edit\"\n            title=\"Обновить аватар\"\n            submit=\"avatar-edit\"\n            textSubmitButton=\"Сохранить\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n        >\n            <input type=\"url\" className=\"popup__input popup__input_avatar-edit\" id=\"link-avatar\" required\n                   placeholder=\"Ссылка на картинку\" name=\"link\"  ref={avatarRef} />\n            <span className=\"error\" id=\"link-avatar-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;","class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  getUserInfo () {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-18/users/me', {\n      method: 'GET',\n      headers: this._headers\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  addUserInfo (data) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-18/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  getAllCards() {\n    return fetch(this._url,{\n      method: 'GET',\n      headers: this._headers\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  addNewCards(data) {\n    return fetch(this._url,{\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  deleteCards(id) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-18/cards/${id}`,{\n      method: 'DELETE',\n      headers: this._headers,\n      }).then((res) => {\n        if (res.ok) {\n          return res.json();\n        }else {\n          return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    })\n  }\n\n  likeCard(likeId) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-18/cards/likes/${likeId}`, {\n      method: 'PUT',\n      headers: this._headers,\n    }).then((res) => {\n      if(res.ok) {\n        return res.json();\n      }else  {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  dislikeCard(likeId) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-18/cards/likes/${likeId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then((res) => {\n      if(res.ok) {\n        return res.json();\n      }else  {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n\n  addUserAvatar (data) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-18/users/me/avatar ', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    })\n  }\n}\n\nexport  const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-18/cards',\n  headers: {\n    authorization: 'e2315ec0-9d36-47b6-91be-ca15417afdd8',\n    'content-type': 'application/json'\n  }\n});\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\n    const newCardNameRef = React.useRef();\n    const newCardLinkRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        onAddPlace({\n            name: newCardNameRef.current.value,\n            link: newCardLinkRef.current.value\n        });\n    }\n    React.useEffect(() => {\n        if(isOpen){\n            newCardNameRef.current.value = '';\n            newCardLinkRef.current.value = '';\n        }\n    },[isOpen])\n\n    return(\n        <PopupWithForm\n            name=\"add-image\"\n            title=\"Новое место\"\n            type=\"min\"\n            submit=\"image-button\"\n            textSubmitButton=\"Создать\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n        >\n            <input className=\"popup__input popup__input_type_name\" id=\"name-card\" required minLength=\"2\"\n                   maxLength=\"30\"\n                   type=\"text\" placeholder=\"Название\" name=\"name\" ref={newCardNameRef} />\n            <span className=\"error\" id=\"name-card-error\"></span>\n            <input type=\"url\" className=\"popup__input popup__input_type_link\" id=\"link\" required\n                   placeholder=\"Ссылка на картинку\"\n                   name=\"link\" ref={newCardLinkRef} />\n            <span className=\"error\" id=\"link-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup;","import '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n    const [ isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [ isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [ isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [ selectedCard, setSelectedCard] = React.useState(null);\n\n    const [currentUser, setCurrentUser] = React.useState('');\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then(res => {\n                setCurrentUser(res)\n            }).catch((err) => alert(err));\n    }, [])\n\n    function handleEditAvatarClick () {\n        setEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick () {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick () {\n        setAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(data) {\n        setSelectedCard(data);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false);\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setSelectedCard(null);\n    }\n    //Изменение инфо\n    function handleUpdateUser(data) {\n        api.addUserInfo(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n    // Изменение аватара\n    function handleUpdateAvatar(data) {\n        api.addUserAvatar(data).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n    //Отрисовка карточек с сервера\n    const [cards, setCards] = React.useState([]);\n    React.useEffect(() => {\n        api.getAllCards()\n            .then(data => {\n                setCards(data)\n            }).catch((err) => alert(err));\n    }, []);\n\n    // Лайк\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        isLiked ? (\n            //Отправляем запрос для удаления лайка\n            api.dislikeCard(card._id).then((res) => {\n                const dislikeCard = cards.map((item) => item._id === card._id ? res : item);\n                setCards(dislikeCard)\n            }).catch((err) => alert(err))\n        ) : (\n            // Отправляем запрос в API и получаем обновлённые данные карточки\n            api.likeCard(card._id, !isLiked).then((newCard) => {\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                // Обновляем стейт\n                setCards(newCards);\n            }).catch((err) => alert(err))\n        )\n    };\n    // Удаление карточки\n    function  handleCardDelete(card) {\n        // Определяем, являемся ли мы владельцем текущей карточки\n        const isOwn = card.owner._id === currentUser._id;\n\n        if (isOwn) {\n            api.deleteCards(card._id).then(() => {\n                const filterCard = cards.filter((item) => item._id !== card._id)\n                setCards(filterCard);\n            }).catch((err) => alert(err));\n        }\n    }\n    //Создаем новую карточку\n    function handleAddPlaceSubmit(data) {\n        api.addNewCards(data).then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        }).catch((err) => alert(err));\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"App\">\n                <Header />\n                <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    handleCardClick={handleCardClick}\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n\n                />\n                <Footer />\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                    />\n                <PopupWithForm\n                    name=\"popup__with-submit\"\n                    container=\"popup__container-with-submit\"\n                    title=\"Вы уверены?\"\n                    submit=\"popup__submit-with-submit\"\n                    type=\"popup__title-with-submit\"\n                />\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups}\n                />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}